-- MySQL Script generated by MySQL Workbench
-- Thu May 18 19:34:42 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE =
        'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema issue_tracker
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema issue_tracker
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `issue_tracker` DEFAULT CHARACTER SET utf8;
USE `issue_tracker`;

-- -----------------------------------------------------
-- Table `issue_tracker`.`member`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `issue_tracker`.`member`;

CREATE TABLE IF NOT EXISTS `issue_tracker`.`member`
(
    `member_id`   INT          NOT NULL AUTO_INCREMENT,
    `name`        VARCHAR(45)  NOT NULL,
    `password`    VARCHAR(100) NOT NULL,
    `profile_url` VARCHAR(100) NULL,
    PRIMARY KEY (`member_id`)
    )
    ENGINE = InnoDB
    DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `issue_tracker`.`milestone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `issue_tracker`.`milestone`;

CREATE TABLE IF NOT EXISTS `issue_tracker`.`milestone`
(
    `milestone_id` INT          NOT NULL AUTO_INCREMENT,
    `title`        VARCHAR(45)  NOT NULL,
    `deadline`     DATETIME     NULL,
    `description`  VARCHAR(200) NULL,
    PRIMARY KEY (`milestone_id`)
    )
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `issue_tracker`.`issue`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `issue_tracker`.`issue`;

CREATE TABLE IF NOT EXISTS `issue_tracker`.`issue`
(
    `issue_id`     INT          NOT NULL AUTO_INCREMENT,
    `writer_id`    INT          NOT NULL,
    `milestone_id` INT          NULL,
    `title`        VARCHAR(200) NOT NULL,
    `contents`     VARCHAR(500) NULL DEFAULT NULL,
    `created_at`   DATETIME     NOT NULL,
    `status`       TINYINT      NOT NULL,
    PRIMARY KEY (`issue_id`),
    INDEX `fk_issue_member_idx` (`writer_id` ASC) VISIBLE,
    INDEX `fk_issue_milestone1_idx` (`milestone_id` ASC) VISIBLE,
    CONSTRAINT `fk_issue_member`
    FOREIGN KEY (`writer_id`)
    REFERENCES `issue_tracker`.`member` (`member_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_issue_milestone1`
    FOREIGN KEY (`milestone_id`)
    REFERENCES `issue_tracker`.`milestone` (`milestone_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    )
    ENGINE = InnoDB
    DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `issue_tracker`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `issue_tracker`.`comment`;

CREATE TABLE IF NOT EXISTS `issue_tracker`.`comment`
(
    `comment_id` INT          NOT NULL AUTO_INCREMENT,
    `writer_id`  INT          NOT NULL,
    `issue_id`   INT          NOT NULL,
    `contents`   VARCHAR(200) NOT NULL,
    `created_at` DATETIME     NOT NULL,
    PRIMARY KEY (`comment_id`),
    INDEX `fk_comment_member1_idx` (`writer_id` ASC) VISIBLE,
    INDEX `fk_comment_issue1_idx` (`issue_id` ASC) VISIBLE,
    CONSTRAINT `fk_comment_member1`
    FOREIGN KEY (`writer_id`)
    REFERENCES `issue_tracker`.`member` (`member_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_comment_issue1`
    FOREIGN KEY (`issue_id`)
    REFERENCES `issue_tracker`.`issue` (`issue_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    )
    ENGINE = InnoDB
    DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `issue_tracker`.`assignee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `issue_tracker`.`assignee`;

CREATE TABLE IF NOT EXISTS `issue_tracker`.`assignee`
(
    `member_id` INT NOT NULL,
    `issue_id`  INT NOT NULL,
    PRIMARY KEY (`member_id`, `issue_id`),
    INDEX `fk_member_has_issue_issue1_idx` (`issue_id` ASC) VISIBLE,
    INDEX `fk_member_has_issue_member1_idx` (`member_id` ASC) VISIBLE,
    CONSTRAINT `fk_member_has_issue_member1`
    FOREIGN KEY (`member_id`)
    REFERENCES `issue_tracker`.`member` (`member_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_member_has_issue_issue1`
    FOREIGN KEY (`issue_id`)
    REFERENCES `issue_tracker`.`issue` (`issue_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    )
    ENGINE = InnoDB
    DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `issue_tracker`.`label`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `issue_tracker`.`label`;

CREATE TABLE IF NOT EXISTS `issue_tracker`.`label`
(
    `label_id`         INT         NOT NULL AUTO_INCREMENT,
    `title`            VARCHAR(45) NOT NULL,
    `description`      VARCHAR(45) NULL,
    `background_color` VARCHAR(45) NOT NULL,
    `font_color`       VARCHAR(45) NOT NULL,
    PRIMARY KEY (`label_id`)
    )
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `issue_tracker`.`issues_with_labels`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `issue_tracker`.`issues_with_labels`;

CREATE TABLE IF NOT EXISTS `issue_tracker`.`issues_with_labels`
(
    `issue_id` INT NOT NULL,
    `label_id` INT NOT NULL,
    PRIMARY KEY (`issue_id`, `label_id`),
    INDEX `fk_label_has_issue_issue1_idx` (`issue_id` ASC) VISIBLE,
    INDEX `fk_label_has_issue_label1_idx` (`label_id` ASC) VISIBLE,
    CONSTRAINT `fk_label_has_issue_label1`
    FOREIGN KEY (`label_id`)
    REFERENCES `issue_tracker`.`label` (`label_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT `fk_label_has_issue_issue1`
    FOREIGN KEY (`issue_id`)
    REFERENCES `issue_tracker`.`issue` (`issue_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    )
    ENGINE = InnoDB;


SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;
